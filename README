
Introdution
-----------------------
COPE (Connecting Overlapped Pair-End reads) is a method to align and connect the sequenced pair
reads of which the insert size is smaller than the sum of the two read length.


USAGE
-----------------------
./cope -a read1.fq -b read2.fq -o ./result -m 0 >cope.log 2>cope.error

Options:
  -a  FILE   query read1 file(*.fq, *.fa, *.fq.gz, *.fa.gz).
  -b  FILE   query read2 file.
  -o  STR    output prefix.
  -l  INT    lower bound overlap length. [10]
             set 8 or 10 for 20~30bp overlap and 15 for 50bp overlap.
  -u  INT    higher bound overlap length. [70]
             set 70 for 20~30 bp overlap and 100~120 for 50bp overlap.
  -c  FLOAT  match ratio cutoff. [0.75]
  -d  FLOAT  match max2_ratio/max_ratio, important for mode 0. [0.7]
  -I  INT    Expected insert size. [170]
  -U  INT    higher bound trim length from the tail of the reads. [0]
  -B  FLOAT  ratio cut off value of Base-quality=2. [0.9]
  -N  INT    filter N base containing pairs(1) or not(0). [1]
  -T  INT    read pair number threshold for parameter training or testing. [0]
  -s  INT    the smallest ASCII value used to represent base quality in fastq files. [64]
             usually 64 or 33 for Illumina data.
  -m  INT    mode type. [0]
             0: simple connect;
             1: k-mer frequency assisted connection;
             2: Auxiliary reads and cross connection for left reads from mode 1;
             3: full mode(including 1 and 2).

  When set mode = 0, set the following options:

  -g  INT    algorithm for simple connect. [1]
             0: standard algorithm(slightly higher connection rate);
             1: hash algorithm(faster connection speed).

  When set mode large than 0, set the following options:

  -k  INT    k-mer size. [17]
  -t  FILE   compressed k-mer frequency table.
  -f  FILE   kmer frequency table len, for parallelly compressed k-mer frequency table.
  -j  FILE   compressed kmer frequency table counted by jellyfish.
  -L  INT    set the threshold of freq-low. [3]
             Kmer with lower frequency will not be considered for base selection.
  -M  INT    set the threshold of freq-normal. [10]
             Kmer with lower frequency will not be considered for spanning k-mer selection.
  -H  INT    set the threshold of freq-high. [60]
             Kmer with higher frequency will not be considered for spanning k-mer selection,
             and double of the average kmer frequency is preferred.
  -R  INT    set the threshold of spanning k-mers number of extremely high frequency. [-1]
             threshold=3 is preferred for high repeat genome, set -1 for disable this threshold.
  -K  FILE   input pair-kmer file for mode=2. [./pair.kmer.list.gz]

  When set mode=2 or 3, you also need to set the following options:

  -D  INT    set the batch number in cross-information file(cross.read.inf*.gz) output. [1]
  -r  INT    use connected reads(1) or raw reads(0) to find cross reads. [1]
  -F  FILE   input extra read-files list(each line for one read file).
             set this while need to find cross reads with the help of other read-files.

  -h         print help information.


OUTPUT
-----------------------
##Alignment-based connection mode(mode 0): 
example: ./cope -a read1.fq -b read2.fq -o ./result -m 0 >cope.log 2>cope.error

creating file:
1. result.connect.fq: The connected reads in fastq format, the last number in the id line is the final read length.
2. result.unConnect_1.fq
3. result.unConnect_2.fq

4. cope.log 
#stat table:
Simple connection table:
total_pairs     connected_pairs connect_ratio(%)        low_quality_pairs low_quality_ratio(%)
150000  139859  93.2393 0       0

Kmer frequency based connection table:
total_pairs     connected_pairs connect_ratio(%)        low_quality_pairs       low_quality_ratio(%)
150000  139486  92.9907 0       0

Cross connect stat table:
total_pairs     no_marker       have_cross      have_cross_ratio(%)     have_cross_connect      cross_connect_ratio(%)
10514   3       10511   99.9715 10292   97.9165

5. cope.error

##k-mer frequency assisted connection(mode 1): 
example: ./cope -a read1.fq -b read2.fq -o ./result -m 1 -t kmer_table.cz -f kmer_table.cz.len 
         >cope.log 2>cope.error
1-5 files are the same as above.

6. pair.kmer.list.gz: pair kmers from pair end reads.
#format: 
pair_id kmer1 read1_len pos1 kmer2 read2_len pos2
1 GTTGTACGACGATAAAG 100 75 ACATAGCAATCCCTAGA 100 24

##Auxiliary reads and cross connection(mode 2):
example: ./cope -a read1.fq -b read2.fq -o ./result -m 2 -t kmer_table.cz -f kmer_table.cz.len 
         >cope.log 2>cope.error 
1-3 and 6 will not be re-created.

7. cross.read.inf*.gz: cross read information for each pair reads.
#format: If insert size is larger than sum of read length, the append_seq and qual will be "-", or else we will append the 
         sequence from the cross reads.
pair_id	insert_size	append_seq append_qual
917 210 TCGTTGACCG fffegdfffg

8. cross_connect.fq
9. cross_unConnect_1.fq
10. cross_unConnect_2.fq

When you run with full mode, the ten files will be created. The final connected files include the result.connect.fq 
and cross_connect.fq, the un-connected file include cross_unConnect_1.fq and cross_unConnect_2.fq.


PERFORMANCE
-----------------------
cope is a  fast tool for connecting the pair end reads with insert size shorter than the 
sum of their read length. For mode=0 to use simple method to connect pair reads, the memory 
will be near 1M. For mode=1 to connect with kmer frequency, the memory will be near 4G . 
For mode=3 to connect with cross reads, the memory will be related to the unconnected read 
pair number and the genome size. The running time for mode 0 and 1 is related to the read 
pair number linearly and the time consumption for simple mode is about half of that for mode 2.
For mode 2 and mode 3, all the reads will be checked to obtain the cross reads, so the 
running time will be longer than before. Because it is also related to the unconnected read 
number from step 1, so the connection ratio in step 1 will also related to the running time 
of mode 2 and mode 3.


COMMENTS/QUESTIONS/REQUESTS
-----------------------
Please send an e-mail to liubinghang@genomics.cn


OPEN SOURCE CODE
-----------------------
https://sourceforge.net/projects/coperead/ or coperead.sf.net


FULL CITATION
-----------------------
COPE: An accurate k-mer based pair-end reads connection tool to facilitate genome assembly
Binghang Liu; Jianying Yuan; Siu-Ming Yiu; Zhenyu Li; Yinlong Xie; Yanxiang
Chen; Yujian Shi; Hao Zhang; Yingrui Li; Tak-Wah Lam; Ruibang Luo
Bioinformatics 2012; doi: 10.1093/bioinformatics/bts563
